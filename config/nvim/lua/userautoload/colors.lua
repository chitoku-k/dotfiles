vim.opt.background = 'dark'

if vim.env.TERM ~= 'linux' then
  vim.opt.termguicolors = true
end

if not pcall(vim.cmd.colorscheme, 'base16-ocean') then
  vim.cmd.colorscheme('desert')
end

if vim.fn.has('ttyin') == 1 or not vim.g.nyaovim_version then
  vim.api.nvim_set_hl(0, 'Normal', {})
end

vim.api.nvim_set_hl(0, 'CocErrorFloat', { fg = '#bf616a' })
vim.api.nvim_set_hl(0, 'CocErrorHighlight', { sp = '#bf616a', undercurl = true })
vim.api.nvim_set_hl(0, 'CocErrorSign', { fg = '#c0c5ce', bg = '#bf616a' })
vim.api.nvim_set_hl(0, 'CocInfoFloat', { fg = '#8fa1b3' })
vim.api.nvim_set_hl(0, 'CocInfoHighlight', { sp = '#8fa1b3', undercurl = true })
vim.api.nvim_set_hl(0, 'CocInfoSign', { fg = '#343d46', bg = '#8fa1b3' })
vim.api.nvim_set_hl(0, 'CocMenuSel', { bg = '#4f5b66' })
vim.api.nvim_set_hl(0, 'CocNotificationProgress', { fg = '#8fa1b3' })
vim.api.nvim_set_hl(0, 'CocSearch', { fg = '#8fa1b3' })
vim.api.nvim_set_hl(0, 'CocSemNamespace', { italic = true })
vim.api.nvim_set_hl(0, 'CocWarningFloat', { fg = '#ebcb8b' })
vim.api.nvim_set_hl(0, 'CocWarningHighlight', { sp = '#ebcb8b', undercurl = true })
vim.api.nvim_set_hl(0, 'CocWarningSign', { fg = '#bf616a', bg = '#ebcb8b' })
vim.api.nvim_set_hl(0, 'Comment', { italic = true })
vim.api.nvim_set_hl(0, 'Conceal', { fg = 'Grey', bg = 'NONE' })
vim.api.nvim_set_hl(0, 'ConflictMarkerBegin', { bg = '#2f7366' })
vim.api.nvim_set_hl(0, 'ConflictMarkerEnd', { bg = '#2f628e' })
vim.api.nvim_set_hl(0, 'ConflictMarkerSeparator', { bg = '#363d45' })
vim.api.nvim_set_hl(0, 'CursorIM', { fg = 'NONE', bg = '#4682b4' })
vim.api.nvim_set_hl(0, 'DiffAdd', { fg = 'NONE', bg = '#334539' })
vim.api.nvim_set_hl(0, 'DiffChange', { fg = 'NONE', bg = '#454133' })
vim.api.nvim_set_hl(0, 'DiffDelete', { fg = 'NONE', bg = '#45333a' })
vim.api.nvim_set_hl(0, 'DiffText', { fg = 'NONE', bg = '#5f5d42' })
vim.api.nvim_set_hl(0, 'DiffLine', { fg = 'NONE', bg = '#8fa1b3' })
vim.api.nvim_set_hl(0, 'EndOfBuffer', { fg = '#363d45', bg = 'NONE' })
vim.api.nvim_set_hl(0, 'Flashy', { bg = '#13354a' })
vim.api.nvim_set_hl(0, 'Identifier', { fg = '#c0c5ce' })
vim.api.nvim_set_hl(0, 'qfError', { fg = '#bf616a' })
vim.api.nvim_set_hl(0, 'SignatureMarkerText', { fg = '#bf616a' })
vim.api.nvim_set_hl(0, 'SignatureMarkText', { fg = '#a3be8c' })
vim.api.nvim_set_hl(0, 'SignColumn', { bg = '#343d46' })
vim.api.nvim_set_hl(0, 'SpellBad', { fg = '#bf616a' })
vim.api.nvim_set_hl(0, 'CocHintFloat', { link = 'CocInfoFloat' })
vim.api.nvim_set_hl(0, 'CocHintHighlight', { link = 'CocInfoHighlight' })
vim.api.nvim_set_hl(0, 'CocHintSign', { link = 'NONE' })
vim.api.nvim_set_hl(0, 'CocHoverRange', { link = 'CursorColumn' })
vim.api.nvim_set_hl(0, 'CocInlayHint', { link = 'Comment' })
vim.api.nvim_set_hl(0, 'CocSemAsyncKeyword', { link = 'Keyword' })
vim.api.nvim_set_hl(0, 'CocSemComment', { link = 'NONE' })
vim.api.nvim_set_hl(0, 'CocSemConstantVariable', { link = 'Boolean' })
vim.api.nvim_set_hl(0, 'CocSemDerive', { link = 'Type' })
vim.api.nvim_set_hl(0, 'CocSemEnumMember', { link = 'Boolean' })
vim.api.nvim_set_hl(0, 'CocSemKeyword', { link = 'NONE' })
vim.api.nvim_set_hl(0, 'CocSemLocalVariable', { link = 'NONE' })
vim.api.nvim_set_hl(0, 'CocSemMacro', { link = 'Macro' })
vim.api.nvim_set_hl(0, 'CocSemMacroBang', { link = 'Macro' })
vim.api.nvim_set_hl(0, 'CocSemNumber', { link = 'NONE' })
vim.api.nvim_set_hl(0, 'CocSemSelfTypeKeyword', { link = 'Special' })
vim.api.nvim_set_hl(0, 'CocSemString', { link = 'NONE' })
vim.api.nvim_set_hl(0, 'CocSemStruct', { link = 'Structure' })
vim.api.nvim_set_hl(0, 'CocSemTypeAlias', { link = 'Special' })
vim.api.nvim_set_hl(0, 'CocSemReadonly', { link = 'Boolean' })
vim.api.nvim_set_hl(0, 'CocSemReadonlyFunction', { link = 'Function' })
vim.api.nvim_set_hl(0, 'CocSemReadonlyProperty', { link = 'NONE' })
vim.api.nvim_set_hl(0, 'dockerfileFrom', { link = 'Tag' })
vim.api.nvim_set_hl(0, 'goGenerate', { link = 'Special' })
vim.api.nvim_set_hl(0, 'goGenerateVariables', { link = 'PreProc' })
vim.api.nvim_set_hl(0, 'goLabel', { link = 'Keyword' })
vim.api.nvim_set_hl(0, 'goRepeat', { link = 'Keyword' })
vim.api.nvim_set_hl(0, 'goType', { link = 'Keyword' })
vim.api.nvim_set_hl(0, 'helpHyperTextJump', { link = 'Underlined' })
vim.api.nvim_set_hl(0, 'javaScriptComment', { link = 'Comment' })
vim.api.nvim_set_hl(0, 'LspCxxHlGroupEnumConstant', { link = 'CocSemEnumMember' })
vim.api.nvim_set_hl(0, 'LspCxxHlGroupNamespace', { link = 'CocSemNamespace' })
vim.api.nvim_set_hl(0, 'LspCxxHlGroupMemberVariable', { link = 'Normal' })
vim.api.nvim_set_hl(0, 'LspCxxHlSymField', { link = 'NONE' })
vim.api.nvim_set_hl(0, 'LspCxxHlSymUnknown', { link = 'NONE' })
vim.api.nvim_set_hl(0, 'LspCxxHlSymVariable', { link = 'NONE' })
vim.api.nvim_set_hl(0, 'tomlKey', { link = 'Macro' })
vim.api.nvim_set_hl(0, 'typescriptEndColons', { link = 'jsObjectSeparator' })
vim.api.nvim_set_hl(0, 'typescriptIdentifier', { link = 'Constant' })
vim.api.nvim_set_hl(0, 'typescriptOpSymbols', { link = 'Function' })
vim.api.nvim_set_hl(0, 'typescriptOperator', { link = 'Function' })
vim.api.nvim_set_hl(0, 'typescriptReserved', { link = 'Keyword' })
vim.api.nvim_set_hl(0, 'phpIdentifier', { link = 'Character' })
vim.api.nvim_set_hl(0, 'phpMethodsVar', { link = 'Function' })
vim.api.nvim_set_hl(0, 'phpRepeat', { link = 'Keyword' })
vim.api.nvim_set_hl(0, 'purescriptOperator', { link = 'Delimiter' })
vim.api.nvim_set_hl(0, 'sshconfigEnum', { link = 'Boolean' })
vim.api.nvim_set_hl(0, 'yamlBlockMappingKey', { link = 'Macro' })
vim.api.nvim_set_hl(0, 'yamlFlowMappingKey', { link = 'Macro' })
vim.api.nvim_set_hl(0, 'yamlPlainScalar', { link = 'String' })
