[[plugins]]
repo = 'justinmk/vim-dirvish'
hook_add = '''
  nnoremap <silent> <Space>e :Dirvish<CR>
  nnoremap <silent> <Space>r :Dirvish %:h<CR>
'''

[[plugins]]
repo = 'chriskempson/base16-vim'
hook_add = '''
  let g:base16colorspace = 256
'''

[[plugins]]
repo = 'felixjung/vim-base16-lightline'

[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = '''
  let g:lightline = {
        \   'colorscheme': 'base16_ocean',
        \   'active': {
        \     'left': [ [ 'mode', 'paste' ], [ 'filename', 'modified' ], [ 'sign' ], [ 'path', 'anzu' ] ],
        \     'right': [ [ 'lineinfo' ], [ 'fileformat', 'fileencoding', 'filetype' ], [ 'charcode' ] ],
        \   },
        \   'inactive': {
        \     'left': [ [ 'filename', 'modified', 'path' ] ],
        \     'right': [],
        \   },
        \   'tabline': {
        \     'left': [ [ 'tabs' ] ],
        \     'right': [],
        \   },
        \   'component_function': {
        \     'mode': 'vimrc#lightline#mode',
        \     'filename': 'vimrc#lightline#filename',
        \     'modified': 'vimrc#lightline#modified',
        \     'path': 'vimrc#lightline#path',
        \     'anzu': 'anzu#search_status',
        \     'lineinfo': 'vimrc#lightline#lineinfo',
        \     'fileformat': 'vimrc#lightline#fileformat',
        \     'fileencoding': 'vimrc#lightline#fileencoding',
        \     'filetype': 'vimrc#lightline#filetype',
        \     'charcode': 'vimrc#lightline#charcode',
        \   },
        \   'component_expand': {
        \     'sign': 'vimrc#lightline#sign',
        \   },
        \   'component_type': {
        \     'sign': 'error',
        \   },
        \ }

  let s:palette = g:lightline#colorscheme#base16_ocean#palette
  let s:palette.normal.error = [['#ebcb8b', '#bf616a', '07', '01']]
'''

# Either $TERM_PROGRAM or $VTE_VERSION is used for detection
[[plugins]]
repo = 'jszakmeister/vim-togglecursor'
if = '!has("nvim")'

[[plugins]]
repo = 'bronson/vim-trailing-whitespace'
hook_add = '''
  let g:extra_whitespace_ignored_filetypes = [
        \   'markdown',
        \ ]
'''

[[plugins]]
repo = 't9md/vim-textmanip'
hook_add = '''
  xmap <C-h> <Plug>(textmanip-move-left)
  xmap <C-j> <Plug>(textmanip-move-down)
  xmap <C-k> <Plug>(textmanip-move-up)
  xmap <C-l> <Plug>(textmanip-move-right)
'''

[[plugins]]
repo = 'editorconfig/editorconfig-vim'

[[plugins]]
repo = 'lambdalisue/suda.vim'

[[plugins]]
repo = 'simeji/winresizer'
hook_add = '''
  let g:winresizer_vert_resize = 1
  let g:winresizer_horiz_resize = 1
'''

[[plugins]]
repo = 'rhysd/clever-f.vim'
hook_add = '''
  let g:clever_f_across_no_line = 1
'''

[[plugins]]
repo = 'kana/vim-tabpagecd'

[[plugins]]
repo = 'ctrlpvim/ctrlp.vim'
hook_add = '''
  nnoremap <silent> <Space>f :CtrlPBuffer<CR>
  nnoremap <silent> <Space>d :CtrlPCurWD<CR>
  nnoremap <silent> <Space>g :CtrlPRoot<CR>
  let g:ctrlp_map = ''
  let g:ctrlp_match_current_file = 1
  let g:ctrlp_match_window = 'bottom,order:ttb,min:20,max:20,results:20'
  let g:ctrlp_reuse_window = 'netrw\|dirvish'
  let g:ctrlp_status_func = {
        \   'main': 'vimrc#ctrlp#status_main',
        \   'prog': 'vimrc#ctrlp#status_prog',
        \ }
  let g:ctrlp_user_command = [
        \   '.git',
        \   'git --git-dir=%s/.git ls-files -oc --exclude-standard',
        \ ]
'''

[[plugins]]
repo = 'qpkorr/vim-bufkill'

[[plugins]]
repo = 'Shougo/context_filetype.vim'
hook_add = '''
  let g:context_filetype#filetypes = {
        \   'help': [],
        \   'html': [
        \     {
        \       'start': '<style type="text/scss"\%( [^>]*\)\?>',
        \       'end': '</style>', 'filetype': 'scss',
        \     },
        \     {
        \       'start': '<style\%( [^>]*\)\?>',
        \       'end': '</style>', 'filetype': 'css',
        \     },
        \     {
        \       'start': '<svg\%( [^>]*\)\?>',
        \       'end': '</svg>', 'filetype': 'svg',
        \     },
        \   ],
        \   'php': [
        \     {
        \       'start': '<style type="text/scss"\%( [^>]*\)\?>',
        \       'end': '</style>', 'filetype': 'scss',
        \     },
        \     {
        \       'start': '<style\%( [^>]*\)\?>',
        \       'end': '</style>', 'filetype': 'css',
        \     },
        \     {
        \       'start': '<svg\%( [^>]*\)\?>',
        \       'end': '</svg>', 'filetype': 'svg',
        \     },
        \   ],
        \ }

  " TODO: Switch filetype without setting syntax
  " 'javascript': [
  "   {
  "     'start': 'styled\(\..*\|(.*)\)`',
  "     'end': '`', 'filetype': 'css',
  "   },
  " ],
  " 'typescript': [
  "   {
  "     'start': 'styled\(\..*\|(.*)\)`',
  "     'end': '`', 'filetype': 'css',
  "   },
  " ],
'''

[[plugins]]
repo = 'mattn/emmet-vim'
on_ft = ['html', 'php', 'javascript', 'typescript', 'css', 'scss']
hook_add = '''
  let g:user_emmet_settings = {
        \   'javascript': {
        \     'extends': 'jsx',
        \   },
        \   'typescript': {
        \     'extends': 'jsx',
        \   },
        \   'variables': {
        \     'lang': 'ja',
        \   },
        \ }
'''

[[plugins]]
repo = 'RRethy/vim-hexokinase'
hook_add = '''
  let g:Hexokinase_ftAutoload = ['*']
  let g:Hexokinase_refreshEvents = ['TextChanged', 'TextChangedI']
'''

[[plugins]]
repo = 'osyo-manga/vim-precious'

[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'Shougo/echodoc.vim'
hook_add = '''
  let g:echodoc_enable_at_startup = 1
'''

# Python 3 is required
[[plugins]]
repo = 'Shougo/deoplete.nvim'
hook_add = '''
  let g:deoplete#enable_at_startup = 1
  let g:deoplete#ignore_sources = {
        \   '_': ['member'],
        \   'php': ['member', 'omni', 'around'],
        \ }
'''
if = 'has("nvim") && has("python3")'

[[plugins]]
repo = 'yssl/QFEnter'
hook_add = '''
  let g:qfenter_keymap = {
        \   'open': ['<CR>'],
        \   'vopen': ['s'],
        \   'hopen': ['i'],
        \   'topen': ['t'],
        \ }
'''

[[plugins]]
repo = 'haya14busa/incsearch.vim'
hook_add = '''
  let g:incsearch#magic = '\v'
  map / <Plug>(incsearch-forward)
  map ? <Plug>(incsearch-backward)
'''

[[plugins]]
repo = 'osyo-manga/vim-anzu'
hook_add = '''
  let g:anzu_status_format = "%/ (%i/%l)"
  nmap <silent> <Esc><Esc> <Plug>(anzu-clear-search-status):nohlsearch<CR>
  nmap n <Plug>(anzu-n)zz
  nmap N <Plug>(anzu-N)zz
  nmap * <Plug>(asterisk-z*)<Plug>(anzu-update-search-status-with-echo)
  nmap # <Plug>(asterisk-z#)<Plug>(anzu-update-search-status-with-echo)

  augroup anzu
    autocmd!
    autocmd WinLeave,TabLeave * call anzu#clear_search_status()
  augroup END
'''

[[plugins]]
repo = 'haya14busa/vim-asterisk'

[[plugins]]
repo = 'kana/vim-fakeclip'

[[plugins]]
repo = 'raghur/vim-ghost'
if = 'has("nvim")'

[[plugins]]
repo = 'kana/vim-operator-user'

[[plugins]]
repo = 'kana/vim-operator-replace'
hook_add = '''
  nmap R <Plug>(operator-replace)
'''

[[plugins]]
repo = 'rhysd/vim-operator-surround'
hook_add = '''
  nmap <silent>ys <Plug>(operator-surround-append)
  nmap <silent>ds <Plug>(operator-surround-delete)
  nmap <silent>cs <Plug>(operator-surround-replace)
'''

[[plugins]]
repo = 'haya14busa/vim-operator-flashy'
hook_add = '''
  map y <Plug>(operator-flashy)
  nmap Y <Plug>(operator-flashy)$
'''

[[plugins]]
repo = 'tyru/operator-reverse.vim'
hook_add = '''
  nmap <silent>vs <Plug>(operator-reverse-text)
'''

[[plugins]]
repo = 'tyru/caw.vim'
hook_add = '''
  let g:caw_operator_keymappings = 1
'''

[[plugins]]
repo = 'kana/vim-textobj-user'

[[plugins]]
repo = 'kana/vim-textobj-indent'

[[plugins]]
repo = 'kana/vim-textobj-line'

[[plugins]]
repo = 'rhysd/vim-textobj-anyblock'

[[plugins]]
repo = 'kana/vim-textobj-entire'

[[plugins]]
repo = 'sgur/vim-textobj-parameter'

[[plugins]]
repo = 'Julian/vim-textobj-variable-segment'

[[plugins]]
repo = 'inside/vim-textobj-jsxattr'
