[[plugins]]
repo = 'leafgarland/typescript-vim'

[[plugins]]
repo = 'mhartington/nvim-typescript'
on_ft = ['typescript']
build = './install.sh'
if = 'has("nvim") && has("python3") && executable("npm")'
hook_add = '''
  let g:nvim_typescript#default_signs = [
        \   {
        \     'TSerror': {
        \       'texthl': 'SpellBad',
        \       'signText': '✖',
        \       'signTexthl': 'NeomakeErrorSign',
        \     },
        \   },
        \   {
        \     'TSwarning': {
        \       'texthl': 'SpellBad',
        \       'signText': '⚠︎',
        \       'signTexthl': 'NeomakeWarningSign',
        \     },
        \   },
        \   {
        \     'TSinformation': {
        \       'texthl': 'SpellBad',
        \       'signText': 'ℹ︎',
        \       'signTexthl': 'NeomakeInfoSign',
        \     },
        \   },
        \   {
        \     'TShint': {
        \       'texthl': 'SpellBad',
        \       'signText': '?',
        \       'signTexthl': 'NeomakeInfoSign',
        \     },
        \   },
        \ ]

  let g:nvim_typescript#diagnostics_enable = 0
  augroup nvim_typescript
    autocmd!
    autocmd BufEnter,Filetype typescript,typescript.tsx execute 'TSGetDiagnostics' | call lightline#update()
    autocmd TextChanged *.ts,*.tsx execute 'TSGetDiagnostics' | call lightline#update()
    autocmd InsertLeave *.ts,*.tsx execute 'TSGetDiagnostics' | call lightline#update()
    autocmd CursorMoved *.ts,*.tsx call TSEchoMessage() | call lightline#update()
  augroup END
'''
