#!/usr/bin/env bash

dotfiles-packages() {
    local packages=$1
    local descriptions=$2

    paste -d '\n' \
        <(awk '{
            gsub(/\//, "'$(tput sgr0)'/");
            print "'$(tput setaf 5)'" NR " '$(tput setaf 2)$(tput bold)'" $0
        }' < "$packages") \
        <(awk '{
            print "    " $0
        }' < "$descriptions")
}

dotfiles-expand-ranges() {
    local num

    while IFS= read -r num; do
        if grep -q '^[0-9]\+\(-[0-9]\+\)\?$' <<< "$num"; then
            seq \
                $(awk '{ sub(/-[0-9]+$/, ""); print }' <<< "$num") \
                $(awk '{ sub(/^[0-9]+-/, ""); print }' <<< "$num")
        fi
    done
}

dotfiles-read-install() {
    local input
    local packages=$1

    {
        tput setaf 2
        tput bold
        echo '==> Packages to install (eg: 1 2 3 or 1-3)'
        echo -n '==> '
        tput sgr0
    } >&2

    read -r input

    tr ' ' '\n' <<< "$input" |
        dotfiles-expand-ranges |
        sort -g |
        uniq |
        awk '{ ORS="P;"; print }' |
        xargs -I {} sed -n {} "$packages"
}

dotfiles-list-install() {
    local num
    local list=$(cat -)

    {
        tput bold
        echo
        echo -n "Packages ($(wc -l <<< "$list" | xargs)) "
        tput sgr0

        awk '{ ORS="  "; sub(/[^\/]*\//, ""); print }' <<< "$list"
        echo
    } >&2
}

dotfiles-confirm-install() {
    local confirm

    {
        echo
        tput bold
        tput setaf 4
        echo -n ':: '
        tput sgr0

        tput bold
        echo -n 'Proceed with installation? [Y/n] '
        tput sgr0
    } >&2

    read -r confirm
    case "$confirm" in
        [yY]*|'')
            return 0
            ;;
        *)
            return 1
            ;;
    esac
}

dotfiles-download() {
    local repository='https://github.com/chitoku-k/dotfiles'
    local tarball='https://github.com/chitoku-k/dotfiles/archive/master.tar.gz'

    if type git &> /dev/null; then
        git clone "$repository"
    elif type curl &> /dev/null; then
        curl -sSL "$tarball" | tar xz
        mv 'dotfiles-master' 'dotfiles'
    fi
}

dotfiles-install() {
    # List packages
    dotfiles-packages ./packages/list ./packages/descriptions

    # Read packages to install
    local installing=$(dotfiles-read-install ./packages/list)
    [[ -z "$installing" ]] && exit 1

    dotfiles-list-install <<< "$installing"

    # Install
    dotfiles-confirm-install && ./installer/install-package <<< "$installing"
}

if [[ ! -d 'config' ]]; then
    (dotfiles-download && cd 'dotfiles' && dotfiles-install "$@")
else
    dotfiles-install "$@"
fi
