#!/usr/bin/env php
<?php
spl_autoload_register(function ($class) {
    require_once __DIR__ . "/scripts/{$class}.php";
});

chdir(__DIR__ . '/config');

$installer = new Installer(
    new Console(),
    array(
        new Package(
            2,
            'xdg',
            'zsh',
            'Configuration for Zsh',
            function (Package $self) {
                $self->symlink('zsh/.zshenv', "{$self->home}/.zshenv");
                $self->symlink($self->name, "{$self->config}/{$self->name}");
            }
        ),
        new Package(
            2,
            'xdg',
            'tmux',
            'Configuration for tmux',
            function (Package $self) {
                $self->symlink($self->name, "{$self->config}/{$self->name}");
            }
        ),
        new Package(
            2,
            'xdg',
            'git/config',
            'Configuration for Git',
            function (Package $self) {
                $self->symlink($self->name, "{$self->config}/{$self->name}");
            }
        ),
        new Package(
            2,
            'xdg',
            'vim',
            'Configuration for Vim',
            function (Package $self) {
                $self->symlink('vim/init.vim', "{$self->home}/.vimrc");
                $self->symlink($self->name, "{$self->config}/{$self->name}");
            }
        ),
        new Package(
            2,
            'xdg',
            'nvim',
            'Configuration for Neovim',
            function (Package $self) {
                $self->symlink('vim', "{$self->config}/{$self->name}");
            }
        ),
        new Package(
            2,
            'xdg',
            'fontconfig/fonts.conf',
            'Configuration for fontconfig',
            function (Package $self) {
                $self->symlink($self->name, "{$self->config}/{$self->name}");
            }
        ),
        new Package(
            2,
            'dotfiles',
            'nyaovim',
            'Configuration for NyaoVim',
            function (Package $self) {
                $self->symlink('vim/nyaovim', "{$self->roaming}/{$self->name}");
            }
        ),
        new Package(
            2,
            'dotfiles',
            '.gvimrc',
            'Configuration for GVim/MacVim',
            function (Package $self) {
                $self->symlink($self->name, "{$self->home}/{$self->name}");
            }
        ),
        new Package(
            2,
            'dotfiles',
            '.vsvimrc',
            'Configuration for VsVim',
            function (Package $self) {
                $self->symlink($self->name, "{$self->home}/{$self->name}");
            }
        ),
        new Package(
            2,
            'dotfiles',
            '.php_cs',
            'Configuration for PHP-CS-Fixer',
            function (Package $self) {
                $self->symlink($self->name, "{$self->home}/{$self->name}");
            }
        ),
        new Package(
            5,
            'zsh',
            'zplug',
            'A next-generation plugin manager for zsh',
            function (Package $self) {
                $self->cloneGit('zplug/zplug', "{$self->xdgcache}/zplug");
            }
        ),
        new Package(
            5,
            'vim',
            'dein.vim',
            'Dark powered Vim/Neovim plugin manager',
            function (Package $self) {
                $self->cloneGit('Shougo/dein.vim', "{$self->xdgcache}/dein/repos/github.com/Shougo/dein.vim");
            }
        ),
        new Package(
            5,
            'tmux',
            'tpm',
            'Tmux Plugin Manager',
            function (Package $self) {
                $self->cloneGit('tmux-plugins/tpm', "{$self->xdgcache}/tpm/plugins");
            }
        ),
    )
);
$installer->execute();
