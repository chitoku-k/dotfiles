[[plugins]]
repo = 'scrooloose/nerdtree'
hook_add = '''
  let g:NERDTreeAutoDeleteBuffer = 1
  let g:NERDTreeMinimalUI = 1
  let g:NERDTreeWinSize = 25
'''

[[plugins]]
repo = 'jistr/vim-nerdtree-tabs'
hook_add = '''
  if winwidth(0) > 80 || has('nvim')
    let g:nerdtree_tabs_open_on_console_startup = 1
  endif
'''

[[plugins]]
repo = 'chitoku-k/nerdtree-chmod'

[[plugins]]
repo = 'chriskempson/base16-vim'
hook_add = '''
  let g:base16colorspace = 256
'''

[[plugins]]
repo = 'felixjung/vim-base16-lightline'

[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = '''
  let g:lightline = {
  \   'colorscheme': 'base16_ocean',
  \   'active': {
  \     'left': [ [ 'mode', 'paste' ], [ 'filename', 'modified' ], [ 'anzu' ] ],
  \     'right': [ [ 'lineinfo' ], [ 'fileformat', 'fileencoding', 'filetype' ], [ 'charcode' ] ],
  \   },
  \   'inactive': {
  \     'left': [ [ 'filename', 'modified' ] ],
  \     'right': [],
  \   },
  \   'tabline': {
  \     'left': [ [ 'tabs' ] ],
  \     'right': [],
  \   },
  \   'component_function': {
  \     'mode': 'LightLineMode',
  \     'filename': 'LightLineFilename',
  \     'modified': 'LightLineModified',
  \     'anzu': 'anzu#search_status',
  \     'lineinfo': 'LightLineLineinfo',
  \     'fileformat': 'LightLineFileformat',
  \     'fileencoding': 'LightLineFileencoding',
  \     'filetype': 'LightLineFiletype',
  \     'charcode': 'LightLineCharcode',
  \   },
  \ }
'''

# Either $TERM_PROGRAM or $VTE_VERSION is used for detection
[[plugins]]
repo = 'jszakmeister/vim-togglecursor'

[[plugins]]
repo = 'bronson/vim-trailing-whitespace'

[[plugins]]
repo = 't9md/vim-textmanip'
hook_add = '''
  xmap <C-h> <Plug>(textmanip-move-left)
  xmap <C-j> <Plug>(textmanip-move-down)
  xmap <C-k> <Plug>(textmanip-move-up)
  xmap <C-l> <Plug>(textmanip-move-right)
'''

[[plugins]]
repo = 'gko/vim-coloresque'

[[plugins]]
repo = 'vim-scripts/sudo.vim'

[[plugins]]
repo = 'simeji/winresizer'
hook_add = '''
  let g:winresizer_vert_resize = 1
  let g:winresizer_horiz_resize = 1
'''

[[plugins]]
repo = 'rhysd/clever-f.vim'

[[plugins]]
repo = 'kassio/neoterm'
hook_add = '''
  nmap <silent> <Space>r :TREPLSendLine<CR>
  vmap <silent> <Space>r :TREPLSendSelection<CR>
'''

[[plugins]]
repo = 'Shougo/denite.nvim'

[[plugins]]
repo = 'Shougo/context_filetype.vim'
hook_add = '''
  let g:context_filetype#filetypes = {
  \   'html': [
  \     {
  \       'start': '<script\%( [^>]*\)\?>',
  \       'end': '</script>', 'filetype': 'javascript',
  \     },
  \     {
  \       'start': '<style type="text/scss"\%( [^>]*\)\?>',
  \       'end': '</style>', 'filetype': 'scss',
  \     },
  \     {
  \       'start': '<style\%( [^>]*\)\?>',
  \       'end': '</style>', 'filetype': 'css',
  \     },
  \     {
  \       'start': '<svg\%( [^>]*\)\?>',
  \       'end': '</svg>', 'filetype': 'svg',
  \     },
  \   ],
  \   'php': [
  \     {
  \       'start': '<script\%( [^>]*\)\?>',
  \       'end': '</script>', 'filetype': 'javascript',
  \     },
  \     {
  \       'start': '<style type="text/scss"\%( [^>]*\)\?>',
  \       'end': '</style>', 'filetype': 'scss',
  \     },
  \     {
  \       'start': '<style\%( [^>]*\)\?>',
  \       'end': '</style>', 'filetype': 'css',
  \     },
  \     {
  \       'start': '<svg\%( [^>]*\)\?>',
  \       'end': '</svg>', 'filetype': 'svg',
  \     },
  \   ],
  \ }
'''

[[plugins]]
repo = 'osyo-manga/vim-precious'

[[plugins]]
repo = 'lambdalisue/vim-gista'

[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'Shougo/deoplete.nvim'
hook_add = '''
  if has('nvim') && has('python3')
    let g:deoplete#enable_at_startup = 1
    let g:deoplete#ignore_sources = {
    \   '_': ['member'],
    \ }
  endif
'''

[[plugins]]
repo = 'yssl/QFEnter'
hook_add = '''
  let g:qfenter_keymap = {
  \   'open': ['<CR>'],
  \   'vopen': ['s'],
  \   'hopen': ['i'],
  \   'topen': ['t'],
  \ }
'''

[[plugins]]
repo = 'christoomey/vim-tmux-navigator'

[[plugins]]
repo = 'tpope/vim-fugitive'

[[plugins]]
repo = 'haya14busa/incsearch.vim'
hook_add = '''
  let g:incsearch#magic = '\v'
  map / <Plug>(incsearch-forward)
  map ? <Plug>(incsearch-backward)
  map g/ <Plug>(incsearch-stay)
'''

[[plugins]]
repo = 'osyo-manga/vim-anzu'
hook_add = '''
  let g:anzu_status_format = "%/ (%i/%l)"
  nmap <silent> <Esc><Esc> <Plug>(anzu-clear-search-status):nohlsearch<CR>
  nmap n <Plug>(anzu-n)zz
  nmap N <Plug>(anzu-N)zz
  nmap * <Plug>(anzu-star)<Plug>(asterisk-z*)zz
  nmap # <Plug>(anzu-sharp)<Plug>(asterisk-z#)zz
'''

[[plugins]]
repo = 'haya14busa/vim-asterisk'
hook_add = '''
  map g* <Plug>(asterisk-gz*)
  map g# <Plug>(asterisk-gz#)
'''

[[plugins]]
repo = 'kana/vim-fakeclip'

[[plugins]]
repo = 'kana/vim-operator-user'

[[plugins]]
repo = 'kana/vim-operator-replace'
hook_add = '''
  nmap R <Plug>(operator-replace)
'''

[[plugins]]
repo = 'rhysd/vim-operator-surround'
hook_add = '''
  nmap <silent>ys <Plug>(operator-surround-append)
  nmap <silent>ds <Plug>(operator-surround-delete)
  nmap <silent>cs <Plug>(operator-surround-replace)
'''

[[plugins]]
repo = 'tyru/operator-reverse.vim'
hook_add = '''
  nmap <silent>vs <Plug>(operator-reverse-text)
'''

[[plugins]]
repo = 'tyru/caw.vim'
hook_add = '''
  let g:caw_operator_keymappings = 1
'''

[[plugins]]
repo = 'kana/vim-textobj-user'

[[plugins]]
repo = 'kana/vim-textobj-indent'

[[plugins]]
repo = 'kana/vim-textobj-line'

[[plugins]]
repo = 'kana/vim-textobj-entire'

[[plugins]]
repo = 'sgur/vim-textobj-parameter'

[[plugins]]
repo = 'Julian/vim-textobj-variable-segment'

[[plugins]]
repo = 'whatyouhide/vim-textobj-xmlattr'
